  Benchmark.cpp
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Common.h(238,23): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
  (编译源文件“Benchmark.cpp”)
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Common.h(278,11): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“Benchmark.cpp”)
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(47,27): error C4839: 将类 "std::atomic<unsigned __int64>" 作为可变参数函数的参数的非标准用法
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(47,27):
  不会调用构造函数和析构函数；该类的位副本将作为参数进行传递
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2776,35):
  参见“std::atomic<unsigned __int64>”的声明
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(47,42): error C2280: “std::atomic<unsigned __int64>::atomic(const std::atomic<unsigned __int64> &)”: 尝试引用已删除的函数
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2181,5):
  参见“std::atomic<unsigned __int64>::atomic”的声明
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2181,5):
  “std::atomic<unsigned __int64>::atomic(const std::atomic<unsigned __int64> &)”: 已隐式删除函数
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(46,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 1 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(46,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(46,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 2 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(46,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(46,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 3 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(46,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(46,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 4 拥有了类型“std::atomic<unsigned __int64>”
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(50,27): error C4839: 将类 "std::atomic<unsigned __int64>" 作为可变参数函数的参数的非标准用法
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(50,27):
  不会调用构造函数和析构函数；该类的位副本将作为参数进行传递
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2776,35):
  参见“std::atomic<unsigned __int64>”的声明
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(50,40): error C2280: “std::atomic<unsigned __int64>::atomic(const std::atomic<unsigned __int64> &)”: 尝试引用已删除的函数
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2181,5):
  参见“std::atomic<unsigned __int64>::atomic”的声明
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2181,5):
  “std::atomic<unsigned __int64>::atomic(const std::atomic<unsigned __int64> &)”: 已隐式删除函数
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(49,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 1 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(49,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(49,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 2 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(49,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(49,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 3 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(49,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(49,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 4 拥有了类型“std::atomic<unsigned __int64>”
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 1 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 2 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 3 拥有了类型“_Ty”
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9): warning C4477:         with
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9): warning C4477:         [
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9): warning C4477:             _Ty=unsigned __int64
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9): warning C4477:         ]
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9):
  请考虑在格式字符串中使用“%llu”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9):
  请考虑在格式字符串中使用“%Iu”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(52,9):
  请考虑在格式字符串中使用“%I64u”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(100,27): error C4839: 将类 "std::atomic<unsigned __int64>" 作为可变参数函数的参数的非标准用法
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(100,27):
  不会调用构造函数和析构函数；该类的位副本将作为参数进行传递
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2776,35):
  参见“std::atomic<unsigned __int64>”的声明
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(100,42): error C2280: “std::atomic<unsigned __int64>::atomic(const std::atomic<unsigned __int64> &)”: 尝试引用已删除的函数
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2181,5):
  参见“std::atomic<unsigned __int64>::atomic”的声明
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2181,5):
  “std::atomic<unsigned __int64>::atomic(const std::atomic<unsigned __int64> &)”: 已隐式删除函数
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(99,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 1 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(99,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(99,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 2 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(99,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(99,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 3 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(99,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(99,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 4 拥有了类型“std::atomic<unsigned __int64>”
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(103,27): error C4839: 将类 "std::atomic<unsigned __int64>" 作为可变参数函数的参数的非标准用法
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(103,27):
  不会调用构造函数和析构函数；该类的位副本将作为参数进行传递
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2776,35):
  参见“std::atomic<unsigned __int64>”的声明
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(103,40): error C2280: “std::atomic<unsigned __int64>::atomic(const std::atomic<unsigned __int64> &)”: 尝试引用已删除的函数
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2181,5):
  参见“std::atomic<unsigned __int64>::atomic”的声明
  E:\program\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.38.33130\include\atomic(2181,5):
  “std::atomic<unsigned __int64>::atomic(const std::atomic<unsigned __int64> &)”: 已隐式删除函数
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(102,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 1 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(102,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(102,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 2 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(102,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(102,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 3 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(102,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(102,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 4 拥有了类型“std::atomic<unsigned __int64>”
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 1 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 2 拥有了类型“size_t”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9):
  请考虑在格式字符串中使用“%zu”
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9): warning C4477: “printf”: 格式字符串“%u”需要类型“unsigned int”的参数，但可变参数 3 拥有了类型“_Ty”
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9): warning C4477:         with
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9): warning C4477:         [
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9): warning C4477:             _Ty=unsigned __int64
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9): warning C4477:         ]
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9):
  请考虑在格式字符串中使用“%llu”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9):
  请考虑在格式字符串中使用“%Iu”
  E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Benchmark.cpp(105,9):
  请考虑在格式字符串中使用“%I64u”
  
  CentralCache.cpp
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Common.h(238,23): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
  (编译源文件“CentralCache.cpp”)
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Common.h(278,11): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“CentralCache.cpp”)
  
  PageCache.cpp
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Common.h(238,23): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
  (编译源文件“PageCache.cpp”)
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Common.h(278,11): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“PageCache.cpp”)
  
  ThreadCache.cpp
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Common.h(238,23): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
  (编译源文件“ThreadCache.cpp”)
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Common.h(278,11): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“ThreadCache.cpp”)
  
  UnitTest.cpp
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Common.h(238,23): warning C4334: “<<”: 32 位移位的结果被隐式转换为 64 位(是否希望进行 64 位移位?)
  (编译源文件“UnitTest.cpp”)
  
E:\study\Project\ConcurrentMemoryPool\ConcurrentMemoryPool\Common.h(278,11): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  (编译源文件“UnitTest.cpp”)
  
  正在生成代码...
